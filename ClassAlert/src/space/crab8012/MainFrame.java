/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package space.crab8012;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Map;
import java.util.Random;
import java.util.TreeMap;
import java.util.Arrays;
import javazoom.jlgui.basicplayer.BasicPlayer;
import javazoom.jlgui.basicplayer.BasicPlayerException;
import space.crab8012.datamanager.CommaSeparatedValues.CSV;
import space.crab8012.datamanager.CommaSeparatedValues.CSVObject;
import space.crab8012.datamanager.FileInformation.GetFileName;

/**
 *
 * @author jpetersen5
 */
public class MainFrame extends javax.swing.JFrame {

    //Song List
    public static List<String> listOfSongNames = new ArrayList<String>();
    public static Map<String, String> songs = new TreeMap<String, String>();

    //Media Player
    public static BasicPlayer player = new BasicPlayer();

    //Time List
    public static List<String> times = new ArrayList<String>();

    public Date dNow = new Date();
    public SimpleDateFormat fu = new SimpleDateFormat("HH:mm");
    
    private static Thread timerThread = new Thread(new TimeCheckerThread());

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        songDialog = new javax.swing.JDialog();
        songChooser = new javax.swing.JFileChooser();
        timeDialog = new javax.swing.JDialog();
        hoursSpinner = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        minutesSpinner = new javax.swing.JSpinner();
        btnSubmitTime = new javax.swing.JButton();
        btnDontSubmitTime = new javax.swing.JButton();
        ampmSpinner = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        jSpinner1 = new javax.swing.JSpinner();
        CSVSaveDialog = new javax.swing.JDialog();
        csvSaveChooser = new javax.swing.JFileChooser();
        CSVOpenDialog = new javax.swing.JDialog();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        csvOpenChooser = new javax.swing.JFileChooser();
        songScrollPane = new javax.swing.JScrollPane();
        songList = new javax.swing.JList();
        timeScrollPane = new javax.swing.JScrollPane();
        timeList = new javax.swing.JList();
        btnAddSong = new javax.swing.JButton();
        btnDeleteSong = new javax.swing.JButton();
        btnAddTime = new javax.swing.JButton();
        btnDeleteTime = new javax.swing.JButton();
        btnStart = new javax.swing.JButton();
        btnStop = new javax.swing.JButton();
        btnPlayMusic = new javax.swing.JButton();
        btnStopMusic = new javax.swing.JButton();
        btnLoadLists = new javax.swing.JButton();
        btnSaveLists = new javax.swing.JButton();

        songDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        songDialog.setMinimumSize(new java.awt.Dimension(640, 400));

        songChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                songChooserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout songDialogLayout = new javax.swing.GroupLayout(songDialog.getContentPane());
        songDialog.getContentPane().setLayout(songDialogLayout);
        songDialogLayout.setHorizontalGroup(
            songDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(songDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(songChooser, javax.swing.GroupLayout.DEFAULT_SIZE, 580, Short.MAX_VALUE)
                .addContainerGap())
        );
        songDialogLayout.setVerticalGroup(
            songDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(songChooser, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );

        timeDialog.setMinimumSize(new java.awt.Dimension(400, 300));

        hoursSpinner.setModel(new javax.swing.SpinnerNumberModel(1, 1, 12, 1));

        jLabel1.setText("Hour");

        jLabel2.setText("Minute");

        minutesSpinner.setModel(new javax.swing.SpinnerNumberModel(1, 1, 59, 1));

        btnSubmitTime.setText("Add Time");
        btnSubmitTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitTimeActionPerformed(evt);
            }
        });

        btnDontSubmitTime.setText("Cancel");
        btnDontSubmitTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDontSubmitTimeActionPerformed(evt);
            }
        });

        ampmSpinner.setModel(new javax.swing.SpinnerListModel(new String[] {"AM", "PM"}));

        jLabel3.setText("AM/PM");

        javax.swing.GroupLayout timeDialogLayout = new javax.swing.GroupLayout(timeDialog.getContentPane());
        timeDialog.getContentPane().setLayout(timeDialogLayout);
        timeDialogLayout.setHorizontalGroup(
            timeDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, timeDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnDontSubmitTime)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 238, Short.MAX_VALUE)
                .addComponent(btnSubmitTime)
                .addContainerGap())
            .addGroup(timeDialogLayout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addGroup(timeDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(timeDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(hoursSpinner)
                    .addComponent(minutesSpinner, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
                    .addComponent(ampmSpinner))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        timeDialogLayout.setVerticalGroup(
            timeDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(timeDialogLayout.createSequentialGroup()
                .addGap(83, 83, 83)
                .addGroup(timeDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hoursSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(timeDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(minutesSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(timeDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(ampmSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 111, Short.MAX_VALUE)
                .addGroup(timeDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSubmitTime)
                    .addComponent(btnDontSubmitTime))
                .addContainerGap())
        );

        CSVSaveDialog.setMinimumSize(new java.awt.Dimension(586, 377));

        csvSaveChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                csvSaveChooserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout CSVSaveDialogLayout = new javax.swing.GroupLayout(CSVSaveDialog.getContentPane());
        CSVSaveDialog.getContentPane().setLayout(CSVSaveDialogLayout);
        CSVSaveDialogLayout.setHorizontalGroup(
            CSVSaveDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CSVSaveDialogLayout.createSequentialGroup()
                .addComponent(csvSaveChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        CSVSaveDialogLayout.setVerticalGroup(
            CSVSaveDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CSVSaveDialogLayout.createSequentialGroup()
                .addComponent(csvSaveChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        CSVOpenDialog.setBounds(new java.awt.Rectangle(0, 0, 640, 480));
        CSVOpenDialog.setMinimumSize(new java.awt.Dimension(640, 480));
        CSVOpenDialog.setResizable(false);
        CSVOpenDialog.setSize(new java.awt.Dimension(640, 480));

        csvOpenChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                csvOpenChooserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(csvOpenChooser, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(csvOpenChooser, javax.swing.GroupLayout.DEFAULT_SIZE, 425, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 620, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 447, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        javax.swing.GroupLayout CSVOpenDialogLayout = new javax.swing.GroupLayout(CSVOpenDialog.getContentPane());
        CSVOpenDialog.getContentPane().setLayout(CSVOpenDialogLayout);
        CSVOpenDialogLayout.setHorizontalGroup(
            CSVOpenDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CSVOpenDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        CSVOpenDialogLayout.setVerticalGroup(
            CSVOpenDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CSVOpenDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ClassAlert");

        songList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        songList.setFixedCellHeight(15);
        songScrollPane.setViewportView(songList);

        timeList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        timeList.setFixedCellHeight(15);
        timeScrollPane.setViewportView(timeList);

        btnAddSong.setText("Add Song");
        btnAddSong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddSongActionPerformed(evt);
            }
        });

        btnDeleteSong.setText("Delete Song");

        btnAddTime.setText("Add Time");
        btnAddTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddTimeActionPerformed(evt);
            }
        });

        btnDeleteTime.setText("Delete Time");

        btnStart.setText("Start Timer");
        btnStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartActionPerformed(evt);
            }
        });

        btnStop.setText("Stop Timer");
        btnStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStopActionPerformed(evt);
            }
        });

        btnPlayMusic.setText("Play Music");
        btnPlayMusic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlayMusicActionPerformed(evt);
            }
        });

        btnStopMusic.setText("Stop Music");
        btnStopMusic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStopMusicActionPerformed(evt);
            }
        });

        btnLoadLists.setText("Load Lists");
        btnLoadLists.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadListsActionPerformed(evt);
            }
        });

        btnSaveLists.setText("Save Lists");
        btnSaveLists.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveListsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(songScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnPlayMusic)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnStart)
                        .addGap(6, 6, 6))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(btnAddSong)
                        .addGap(18, 18, 18)
                        .addComponent(btnDeleteSong)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnStop)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnStopMusic))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(73, 73, 73)
                                .addComponent(btnAddTime)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnDeleteTime))
                            .addComponent(timeScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(125, 125, 125)
                .addComponent(btnLoadLists)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSaveLists)
                .addGap(129, 129, 129))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(timeScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 373, Short.MAX_VALUE)
                    .addComponent(songScrollPane))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddSong)
                    .addComponent(btnDeleteSong)
                    .addComponent(btnAddTime)
                    .addComponent(btnDeleteTime))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLoadLists)
                    .addComponent(btnSaveLists))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnStart)
                    .addComponent(btnStop)
                    .addComponent(btnPlayMusic)
                    .addComponent(btnStopMusic))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddSongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddSongActionPerformed
        songDialog.setVisible(true);
        //FileChooser.main();
    }//GEN-LAST:event_btnAddSongActionPerformed

    private void songChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_songChooserActionPerformed
        File song = songChooser.getSelectedFile();
        listOfSongNames.add(song.getName());
        songs.put(song.getName(), song.getAbsolutePath());

        songList.setListData(listOfSongNames.toArray(new String[listOfSongNames.size()]));

        songDialog.setVisible(false);
        songDialog.dispose();
    }//GEN-LAST:event_songChooserActionPerformed

    private void btnPlayMusicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlayMusicActionPerformed

        try {
            player.open(new URL("file:///" + getRandomSong()));
            player.play();
        } catch (BasicPlayerException | MalformedURLException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnPlayMusicActionPerformed

    private void btnStopMusicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStopMusicActionPerformed
        try {
            player.stop();
        } catch (BasicPlayerException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnStopMusicActionPerformed

    private void btnAddTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddTimeActionPerformed

        //if(times.contains(fu.format(dNow))){
        //    System.out.println("AHSDIF");
        //}
        timeDialog.setVisible(true);
    }//GEN-LAST:event_btnAddTimeActionPerformed

    private void btnSubmitTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitTimeActionPerformed
        int hours = Integer.parseInt(hoursSpinner.getValue().toString());

        if (ampmSpinner.getValue().equals("AM")) {
            hours += 0;
        } else {
            hours += 12;
        }

        int minutes = Integer.parseInt(minutesSpinner.getValue().toString());

        if(minutes > 10){
            times.add(hours + ":" + minutes);
        }else if(minutes < 10){
            times.add(hours + ":0" + minutes);
        }
        
        System.out.println(times);

        timeList.setListData(times.toArray(new String[times.size()]));

        timeDialog.dispose();
    }//GEN-LAST:event_btnSubmitTimeActionPerformed

    private void btnStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartActionPerformed
        timerThread.start();
    }//GEN-LAST:event_btnStartActionPerformed

    private void btnStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStopActionPerformed
        timerThread.stop();
    }//GEN-LAST:event_btnStopActionPerformed

    private void btnDontSubmitTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDontSubmitTimeActionPerformed
        timeDialog.dispose();
    }//GEN-LAST:event_btnDontSubmitTimeActionPerformed

    private void btnLoadListsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadListsActionPerformed
        CSVOpenDialog.setVisible(true);
    }//GEN-LAST:event_btnLoadListsActionPerformed

    private void btnSaveListsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveListsActionPerformed
        CSVSaveDialog.setVisible(true);
    }//GEN-LAST:event_btnSaveListsActionPerformed

    private void csvSaveChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_csvSaveChooserActionPerformed
        String csvFile = csvSaveChooser.getSelectedFile().getAbsolutePath();
        List<Object> songURLList = Arrays.asList(songs.values().toArray());
        CSV.saveTwoColumn(csvFile, songURLList, times, "Songs", "Times");
        System.out.println("Saved File");
        
        CSVSaveDialog.dispose();
    }//GEN-LAST:event_csvSaveChooserActionPerformed

    private void csvOpenChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_csvOpenChooserActionPerformed
        String csvFile = csvOpenChooser.getSelectedFile().getAbsolutePath();
        String a = "";
        String b = "";
        
        List<String> paths = new ArrayList<String>();
        List<String> names = new ArrayList<String>();
        List<String> newTimes = new ArrayList<String>();
        
        CSVObject data = CSV.readTwoColumn(csvFile);
        
        System.out.println("Column 1: " + data.getColumn1());
        System.out.println("Column 2: " + data.getColumn2());
        newTimes = data.getColumn2();
        
        //Get the paths and then grab the filename from them.
        paths = data.getColumn1();
        //Remove all of the empty paths
        for(int i = paths.size()-1; i >= 0; i--){
            if(paths.get(i).equals("") || paths.get(i).equals(" ")){
                paths.remove(i);
            }
        }
        
        for(String s: paths){
            names.add(GetFileName.fromPath(s));
        }
        
        //Add the items to the appropriate Lists
        listOfSongNames = names;
        
        //Modify the songs map
        songs.clear();
        for(int i = 0; i < listOfSongNames.size(); i++){
            songs.put(names.get(i), paths.get(i));
        }
        
        //Update the time list
        times = newTimes;
        
        //Clear the jList Objects of old data
        songList.removeAll();
        timeList.removeAll();
        
        //Populate the jList Objects with the new data
        songList.setListData(names.toArray(new String[names.size()]));
        timeList.setListData(times.toArray(new String[times.size()]));
        
        //Close the Open File dialog box
        CSVOpenDialog.dispose();
    }//GEN-LAST:event_csvOpenChooserActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }
    
    public static void timerTripped(){
        try {
            player.open(new URL("file:///" + getRandomSong()));
            player.play();
        } catch (BasicPlayerException | MalformedURLException e) {
            e.printStackTrace();
        }
    }

    public static String getRandomSong() {
        Random random = new Random();
        List<String> keys = new ArrayList<String>(songs.keySet());
        String randomKey = keys.get(random.nextInt(keys.size()));
        String path = songs.get(randomKey);

        return path;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog CSVOpenDialog;
    private javax.swing.JDialog CSVSaveDialog;
    private javax.swing.JSpinner ampmSpinner;
    private javax.swing.JButton btnAddSong;
    private javax.swing.JButton btnAddTime;
    private javax.swing.JButton btnDeleteSong;
    private javax.swing.JButton btnDeleteTime;
    private javax.swing.JButton btnDontSubmitTime;
    private javax.swing.JButton btnLoadLists;
    private javax.swing.JButton btnPlayMusic;
    private javax.swing.JButton btnSaveLists;
    private javax.swing.JButton btnStart;
    private javax.swing.JButton btnStop;
    private javax.swing.JButton btnStopMusic;
    private javax.swing.JButton btnSubmitTime;
    private javax.swing.JFileChooser csvOpenChooser;
    private javax.swing.JFileChooser csvSaveChooser;
    private javax.swing.JSpinner hoursSpinner;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JSpinner minutesSpinner;
    private javax.swing.JFileChooser songChooser;
    private javax.swing.JDialog songDialog;
    private javax.swing.JList songList;
    private javax.swing.JScrollPane songScrollPane;
    private javax.swing.JDialog timeDialog;
    private javax.swing.JList timeList;
    private javax.swing.JScrollPane timeScrollPane;
    // End of variables declaration//GEN-END:variables
}
